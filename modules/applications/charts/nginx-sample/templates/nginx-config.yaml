apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "nginx-sample.fullname" . }}-nginx-config
  labels:
    {{- include "nginx-sample.labels" . | nindent 4 }}
data:
  default.conf: |
    server {
        listen       80;
        listen  [::]:80;
        server_name  {{ .Values.nginx.host | default "localhost" }};

        access_log  /var/log/nginx/access.log;
        error_log   /var/log/nginx/error.log;

        # Security headers
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header Referrer-Policy "no-referrer-when-downgrade" always;
        add_header Content-Security-Policy "default-src 'self' http: https: data: blob: 'unsafe-inline'" always;

        # Gzip compression
        gzip on;
        gzip_vary on;
        gzip_min_length 1024;
        gzip_proxied any;
        gzip_types text/plain text/css text/xml text/javascript application/javascript application/xml+rss application/json;

        location / {
            root   /usr/share/nginx/html;
            index  index.html index.htm;
            try_files $uri $uri/ /index.html;
            
            # Cache static assets
            location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
                expires 1y;
                add_header Cache-Control "public, immutable";
            }
        }

        # Health check endpoint
        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }

        # Nginx status (for monitoring)
        {{- if .Values.nginx.statusPage.enabled }}
        location /nginx-status {
            stub_status on;
            access_log off;
            {{- if .Values.nginx.statusPage.allowFrom }}
            {{- range .Values.nginx.statusPage.allowFrom }}
            allow {{ . }};
            {{- end }}
            deny all;
            {{- end }}
        }
        {{- end }}

        # Error pages
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   /usr/share/nginx/html;
        }
    }