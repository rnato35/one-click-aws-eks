name: terraform-destroy

on:
  workflow_dispatch:
    inputs:
      environment:
        description: "Environment to destroy"
        type: choice
        options:
          - dev
          - staging
          - prod
        required: true
        default: dev
      confirm:
        description: "I understand this will permanently destroy resources"
        type: boolean
        required: true

permissions:
  id-token: write
  contents: read
  issues: write

env:
  TF_IN_AUTOMATION: "true"
  TF_INPUT: "false"
  TF_VERSION: "1.6.6"
  AWS_REGION: ${{ vars.TF_BACKEND_REGION }}

jobs:
  destroy:
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}
    concurrency:
      group: ${{ github.workflow }}-${{ github.ref }}-${{ inputs.environment }}-destroy
      cancel-in-progress: false
    defaults:
      run:
        shell: bash
        working-directory: infra/envs
    steps:
      - name: Ensure confirmation provided
        if: inputs.confirm != true
        run: |
          echo "You must set 'confirm' to true to proceed." >&2
          exit 1

      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ env.TF_VERSION }}

      - name: Configure AWS Credentials (OIDC)
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Terraform Init (remote backend)
        run: |
          terraform init \
            -backend-config="bucket=${{ vars.TF_BACKEND_BUCKET }}" \
            -backend-config="key=global/terraform.tfstate" \
            -backend-config="region=${{ vars.TF_BACKEND_REGION }}" \
            -backend-config="encrypt=true" \
            -backend-config="dynamodb_table=${{ vars.TF_BACKEND_DDB_TABLE }}" \
            -backend-config="kms_key_id=${{ vars.TF_BACKEND_KMS_KEY_ID }}" \
            -backend-config="acl=private" \
            -backend-config="workspace_key_prefix=envs"

      - name: Terraform Validate
        run: terraform validate

      - name: Select Workspace
        run: |
          ENV="${{ inputs.environment }}"
          terraform workspace list | grep -q " $ENV$" || terraform workspace new "$ENV"
          terraform workspace select "$ENV"

      - name: Require manual approval for staging/prod
        if: inputs.environment != 'dev'
        uses: trstringer/manual-approval@v1
        with:
          secret: ${{ secrets.GITHUB_TOKEN }}
          approvers: rnato35
          minimum-approvals: 1
          issue-title: "Manual approval required for ${{ inputs.environment }} destroy"
          issue-body: "Approve to proceed with Terraform destroy for ${{ inputs.environment }}."
          exclude-workflow-initiator-as-approver: false

      - name: Terraform Destroy
        env:
          ENV_INPUT: ${{ inputs.environment }}
        run: |
          case "$ENV_INPUT" in
            dev) VARS=dev/terraform.tfvars ;;
            staging) VARS=staging/terraform.tfvars ;;
            prod) VARS=prod/terraform.tfvars ;;
          esac
          terraform destroy -auto-approve -var-file="$VARS" -var "region=${AWS_REGION}"
